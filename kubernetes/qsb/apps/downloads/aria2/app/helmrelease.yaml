---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: aria2
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      aria2:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          imagePullSecrets:
            - name: private-ghcr
          securityContext:
            fsGroup: 2000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65542
        initContainers:
          gluetun:
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.39.0
            env:
              VPN_SERVICE_PROVIDER: custom
              VPN_TYPE: wireguard
              FIREWALL_INPUT_PORTS: 8080
              FIREWALL_OUTBOUND_SUBNETS: 10.96.0.0/12,10.244.0.0/16 # Allow access to k8s subnets
            envFrom:
              - secretRef:
                  name: aria2-vpn-secret
            restartPolicy: Always
            securityContext:
              capabilities:
                add: [NET_ADMIN]
              allowPrivilegeEscalation: false
        containers:
          app:
            image:
              repository: ghcr.io/aka-raccoon/aria2
              tag: 0.0.2
            env:
              RPC_PORT: &port 8080
              RPC_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: aria2-secret
                    key: rpc_secret
              SONARR_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: aria2-secret
                    key: sonarr_api_key
              SONARR_URL: http://10.1.1.139:8989
              RADARR_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: aria2-secret
                    key: radarr_api_key
              RADARR_URL: http://10.1.1.138:7878
            resources:
              requests:
                cpu: 5m
                memory: 1024Mi
              limits:
                memory: 6144Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsUser: 2000
              runAsGroup: 2000
              runAsNonRoot: true
              capabilities:
                drop: [ALL]
    service:
      app:
        controller: aria2
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.1.1.137
        ports:
          http:
            port: *port

    ingress:
      app:
        className: "internal-nginx"
        annotations:
          external-dns.alpha.kubernetes.io/hostname: aria2.${DOMAIN}
        hosts:
          - host: aria2.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        enabled: true
        existingClaim: aria2-config
        advancedMounts:
          aria2:
            app:
              - path: /config
      media:
        type: nfs
        server: asc.internal
        path: /mnt/tank/media
        globalMounts:
          - path: /data/nas-media
      config-file:
        enabled: true
        type: configMap
        name: aria2-configmap
        globalMounts:
          - path: /config/aria2.conf
            subPath: aria2.conf
            readOnly: true
      informarr:
        enabled: true
        type: configMap
        name: aria2-informarr
        defaultMode: 0775
        globalMounts:
          - path: /config/informarr.sh
            subPath: informarr.sh
            readOnly: true
